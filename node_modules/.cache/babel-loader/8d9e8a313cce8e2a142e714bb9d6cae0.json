{"ast":null,"code":"import _slicedToArray from \"/Users/garyc/Downloads/phase-challenge/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/garyc/Downloads/phase-challenge/src/ElementMarker.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nvar ElementMaker = function ElementMaker(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showInputEle = _useState2[0],\n    setShowInputEle = _useState2[1];\n  //with double click => change to input\n  return /*#__PURE__*/React.createElement(React.Fragment, null, showInputEle ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: props.value,\n    onChange: props.handleChange,\n    onBlur: function onBlur() {\n      return setShowInputEle(false);\n    },\n    autoFocus: true,\n    style: {\n      color: \"blue\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    onDoubleClick: function onDoubleClick() {\n      return setShowInputEle(true);\n    },\n    style: {\n      display: \"inline-block\",\n      height: \"25px\",\n      minWidth: \"300px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, props.value));\n};\nexport default ElementMaker;","map":{"version":3,"names":["React","useState","ElementMaker","props","_useState","_useState2","_slicedToArray","showInputEle","setShowInputEle","createElement","Fragment","type","value","onChange","handleChange","onBlur","autoFocus","style","color","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","onDoubleClick","display","height","minWidth"],"sources":["/Users/garyc/Downloads/phase-challenge/src/ElementMarker.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\n\nconst ElementMaker = (props) => {\n\n    const [showInputEle, setShowInputEle] = useState(false);\n    //with double click => change to input\n    return (\n        <>\n            {\n                showInputEle ?\n                    <input\n                        type=\"text\"\n                        value={props.value}\n                        onChange={props.handleChange}\n                        onBlur={() => setShowInputEle(false)}\n                        autoFocus\n                        style={{ color: \"blue\" }}\n                    />\n                    :\n                    <span\n                        onDoubleClick={() => setShowInputEle(true)}\n                        style={{\n                            display: \"inline-block\",\n                            height: \"25px\",\n                            minWidth: \"300px\",\n                        }}\n                    >\n                        {props.value}\n                    </span>\n\n            }\n        </>\n    );\n}\n\nexport default ElementMaker;"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAGhC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAK;EAE5B,IAAAC,SAAA,GAAwCH,QAAQ,CAAC,KAAK,CAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC;EACA,oBACIL,KAAA,CAAAS,aAAA,CAAAT,KAAA,CAAAU,QAAA,QAEQH,YAAY,gBACRP,KAAA,CAAAS,aAAA;IACIE,IAAI,EAAC,MAAM;IACXC,KAAK,EAAET,KAAK,CAACS,KAAM;IACnBC,QAAQ,EAAEV,KAAK,CAACW,YAAa;IAC7BC,MAAM,EAAE,SAAAA,OAAA;MAAA,OAAMP,eAAe,CAAC,KAAK,CAAC;IAAA,CAAC;IACrCQ,SAAS;IACTC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC5B,CAAC,gBAEFzB,KAAA,CAAAS,aAAA;IACIiB,aAAa,EAAE,SAAAA,cAAA;MAAA,OAAMlB,eAAe,CAAC,IAAI,CAAC;IAAA,CAAC;IAC3CS,KAAK,EAAE;MACHU,OAAO,EAAE,cAAc;MACvBC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE;IACd,CAAE;IAAAV,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEDtB,KAAK,CAACS,KACL,CAGhB,CAAC;AAEX,CAAC;AAED,eAAeV,YAAY"},"metadata":{},"sourceType":"module"}