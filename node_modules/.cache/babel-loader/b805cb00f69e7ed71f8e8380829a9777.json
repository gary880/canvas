{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = [];\nvar elementSlice = createSlice({\n  name: \"element\",\n  initialState: initialState,\n  reducers: {\n    getElement: function getElement(state) {\n      return state;\n    },\n    addElement: {\n      reducer: function reducer(state, action) {\n        state.push(action.payload);\n      },\n      prepare: function prepare(_ref) {\n        var page = _ref.page,\n          parent = _ref.parent;\n        return {\n          payload: {\n            id: \"\".concat(Math.random()).replace('0.', ''),\n            page: page,\n            parent: parent,\n            name: \"new element\",\n            active: true,\n            positionX: 10,\n            positionY: 10,\n            opacity: 100,\n            color: \"#E5E5E5\"\n          }\n        };\n      }\n    },\n    updateElement: function updateElement(state, action) {\n      var _action$payload = action.payload,\n        id = _action$payload.id,\n        name = _action$payload.name,\n        active = _action$payload.active,\n        positionX = _action$payload.positionX,\n        positionY = _action$payload.positionY,\n        opacity = _action$payload.opacity,\n        color = _action$payload.color;\n      var existingItem = state.find(function (item) {\n        return (item === null || item === void 0 ? void 0 : item.id) === id;\n      });\n      if (existingItem) {\n        existingItem.name = name;\n        existingItem.active = active;\n        existingItem.positionX = positionX;\n        existingItem.positionY = positionY;\n        existingItem.opacity = opacity;\n        existingItem.color = color;\n      }\n    }\n  }\n});\nvar _elementSlice$actions = elementSlice.actions,\n  getElement = _elementSlice$actions.getElement,\n  addElement = _elementSlice$actions.addElement,\n  updateElement = _elementSlice$actions.updateElement;\nexport { getElement, addElement, updateElement };\nexport var selectElements = function selectElements(state) {\n  return state.element;\n};\nexport default elementSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","elementSlice","name","reducers","getElement","state","addElement","reducer","action","push","payload","prepare","_ref","page","parent","id","concat","Math","random","replace","active","positionX","positionY","opacity","color","updateElement","_action$payload","existingItem","find","item","_elementSlice$actions","actions","selectElements","element"],"sources":["/Users/garyc/Downloads/phase-challenge/src/reducers/element.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = [\n]\n\nconst elementSlice = createSlice({\n    name: \"element\",\n    initialState,\n    reducers: {\n        getElement: (state) => {\n            return state\n        },\n        addElement: {\n            reducer(state, action) {\n                state.push(action.payload)\n            },\n            prepare({page,parent}) {\n                return {\n                    payload: {\n                        id: `${Math.random()}`.replace('0.', ''),\n                        page: page,\n                        parent: parent,\n                        name: \"new element\",\n                        active: true,\n                        positionX: 10,\n                        positionY: 10,\n                        opacity: 100,\n                        color: \"#E5E5E5\",\n                    },\n                }\n            },\n\n        },\n    \n        updateElement: (state, action) => {\n            const { id, name, active, positionX, positionY, opacity, color } = action.payload\n            const existingItem = state.find((item) => item?.id === id)\n            if (existingItem) {\n                existingItem.name = name;\n                existingItem.active = active;\n                existingItem.positionX = positionX;\n                existingItem.positionY = positionY;\n                existingItem.opacity = opacity;\n                existingItem.color = color;\n            }\n        },\n        \n    }\n});\n\nexport const {\n    getElement,\n    addElement,\n    updateElement\n} = elementSlice.actions;\nexport const selectElements = (state) => state.element\nexport default elementSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,YAAY,GAAG,EACpB;AAED,IAAMC,YAAY,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAE,SAAS;EACfF,YAAY,EAAZA,YAAY;EACZG,QAAQ,EAAE;IACNC,UAAU,EAAE,SAAAA,WAACC,KAAK,EAAK;MACnB,OAAOA,KAAK;IAChB,CAAC;IACDC,UAAU,EAAE;MACRC,OAAO,WAAAA,QAACF,KAAK,EAAEG,MAAM,EAAE;QACnBH,KAAK,CAACI,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAC9B,CAAC;MACDC,OAAO,WAAAA,QAAAC,IAAA,EAAgB;QAAA,IAAdC,IAAI,GAAAD,IAAA,CAAJC,IAAI;UAACC,MAAM,GAAAF,IAAA,CAANE,MAAM;QAChB,OAAO;UACHJ,OAAO,EAAE;YACLK,EAAE,EAAE,GAAAC,MAAA,CAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,EAAGC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;YACxCN,IAAI,EAAEA,IAAI;YACVC,MAAM,EAAEA,MAAM;YACdZ,IAAI,EAAE,aAAa;YACnBkB,MAAM,EAAE,IAAI;YACZC,SAAS,EAAE,EAAE;YACbC,SAAS,EAAE,EAAE;YACbC,OAAO,EAAE,GAAG;YACZC,KAAK,EAAE;UACX;QACJ,CAAC;MACL;IAEJ,CAAC;IAEDC,aAAa,EAAE,SAAAA,cAACpB,KAAK,EAAEG,MAAM,EAAK;MAC9B,IAAAkB,eAAA,GAAmElB,MAAM,CAACE,OAAO;QAAzEK,EAAE,GAAAW,eAAA,CAAFX,EAAE;QAAEb,IAAI,GAAAwB,eAAA,CAAJxB,IAAI;QAAEkB,MAAM,GAAAM,eAAA,CAANN,MAAM;QAAEC,SAAS,GAAAK,eAAA,CAATL,SAAS;QAAEC,SAAS,GAAAI,eAAA,CAATJ,SAAS;QAAEC,OAAO,GAAAG,eAAA,CAAPH,OAAO;QAAEC,KAAK,GAAAE,eAAA,CAALF,KAAK;MAC9D,IAAMG,YAAY,GAAGtB,KAAK,CAACuB,IAAI,CAAC,UAACC,IAAI;QAAA,OAAK,CAAAA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEd,EAAE,MAAKA,EAAE;MAAA,EAAC;MAC1D,IAAIY,YAAY,EAAE;QACdA,YAAY,CAACzB,IAAI,GAAGA,IAAI;QACxByB,YAAY,CAACP,MAAM,GAAGA,MAAM;QAC5BO,YAAY,CAACN,SAAS,GAAGA,SAAS;QAClCM,YAAY,CAACL,SAAS,GAAGA,SAAS;QAClCK,YAAY,CAACJ,OAAO,GAAGA,OAAO;QAC9BI,YAAY,CAACH,KAAK,GAAGA,KAAK;MAC9B;IACJ;EAEJ;AACJ,CAAC,CAAC;AAEK,IAAAM,qBAAA,GAIH7B,YAAY,CAAC8B,OAAO;EAHpB3B,UAAU,GAAA0B,qBAAA,CAAV1B,UAAU;EACVE,UAAU,GAAAwB,qBAAA,CAAVxB,UAAU;EACVmB,aAAa,GAAAK,qBAAA,CAAbL,aAAa;AACQ,SAAArB,UAAA,EAAAE,UAAA,EAAAmB,aAAA;AACzB,OAAO,IAAMO,cAAc,GAAG,SAAjBA,cAAcA,CAAI3B,KAAK;EAAA,OAAKA,KAAK,CAAC4B,OAAO;AAAA;AACtD,eAAehC,YAAY,CAACM,OAAO"},"metadata":{},"sourceType":"module"}